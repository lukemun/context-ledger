name: Integration Tests

on:
  pull_request:
    branches: [main]
    paths:
      - "action.yml"
      - "lib/**"
      - "package.json"
  workflow_dispatch:

jobs:
  test-scenarios:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-case:
          - name: "Empty Changelog"
            changelog: |
              # Changelog
              
              <!-- AI_APPEND_HERE -->
          - name: "Existing Versions"
            changelog: |
              # Changelog
              
              ## [1.0.0] - 2024-01-01
              - Initial release
              
              <!-- AI_APPEND_HERE -->
          - name: "Multiple Markers"
            changelog: |
              # Changelog
              
              ## [1.0.0]
              <!-- AI_APPEND_HERE -->
              
              ## [0.9.0]
              <!-- AI_APPEND_HERE -->
          - name: "No Marker"
            changelog: |
              # Changelog
              
              ## [1.0.0] - 2024-01-01
              - Initial release

    name: Test - ${{ matrix.test-case.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Create test changelog
        run: |
          cat > test-CHANGELOG.md << 'EOF'
          ${{ matrix.test-case.changelog }}
          EOF

      - name: Run Context Ledger
        id: changelog
        uses: ./
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          changelog_path: "test-CHANGELOG.md"
          target_name: "test-${{ matrix.test-case.name }}"
          version_increment: "patch"
          auto_commit: false
          create_pr_suggestions: false
        continue-on-error: true

      - name: Validate Results
        run: |
          echo "Test Case: ${{ matrix.test-case.name }}"
          echo "Status: ${{ steps.changelog.outputs.status }}"
          echo "Updated: ${{ steps.changelog.outputs.changelog_updated }}"
          echo "Version: ${{ steps.changelog.outputs.version_generated }}"
          
          # Show the resulting changelog
          echo "=== Resulting Changelog ==="
          cat test-CHANGELOG.md || echo "File not found"
          
          # Basic validation
          if [ "${{ matrix.test-case.name }}" == "No Marker" ]; then
            if [ "${{ steps.changelog.outputs.status }}" != "ERROR" ]; then
              echo "❌ Expected ERROR for no marker case"
              exit 1
            fi
          fi

      - name: Cleanup
        if: always()
        run: rm -f test-CHANGELOG.md
